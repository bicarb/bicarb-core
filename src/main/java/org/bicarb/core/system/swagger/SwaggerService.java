/*
 * Copyright (c) 2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.bicarb.core.system.swagger;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonParser;
import com.yahoo.elide.Elide;
import com.yahoo.elide.contrib.swagger.SwaggerBuilder;
import io.swagger.models.Info;
import io.swagger.models.Path;
import io.swagger.models.Swagger;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Map;
import java.util.Map.Entry;
import java.util.stream.Collectors;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Service;

/**
 * SwaggerService.
 *
 * @author olOwOlo
 */
@Service
public class SwaggerService {

  private static final Logger logger = LoggerFactory.getLogger(SwaggerService.class);

  private final Elide elide;

  @Autowired
  public SwaggerService(Elide elide) {
    this.elide = elide;
  }

  private Info getInfo() {
    return new Info()
        .title("API supported by Elide")
        .description("\nThis documentation is generated by [Elide](https://github.com/yahoo/elide)."
            + "\n\n# Reference\n\n- [Elide JSON API](http://elide.io/pages/guide/10-jsonapi.html)\n"
            + "- [JSON API Specification](http://jsonapi.org/)\n")
        .version("1.0");
  }

  /**
   * Generate Elide Doc and patch with "/api" prefix.
   */
  @Cacheable("elideDoc")
  public String getElideDoc() throws IOException {
    Info info = getInfo();
    Swagger swagger = new SwaggerBuilder(elide.getElideSettings().getDictionary(), info).build();
    Map<String, Path> patchMap = swagger.getPaths().entrySet().stream()
        .map(entry -> Map.entry("/api" + entry.getKey(), entry.getValue()))
        .collect(Collectors.toMap(Entry::getKey, Entry::getValue));
    swagger.setPaths(patchMap);
    String json = SwaggerBuilder.getDocument(swagger);
    StringWriter out = new StringWriter();

    JsonFactory factory = new JsonFactory();
    JsonParser parser = factory.createParser(json);
    try (JsonGenerator gen = factory.createGenerator(out)) {
      while (parser.nextToken() != null) {
        gen.copyCurrentEvent(parser);
      }
    }

    logger.debug("Generated elide swagger");
    return out.toString();
  }
}
